{
	"id": "c0293700ea8186203e667a435c9329b9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/counter contract.sol": {
				"content": "pragma solidity ^0.7.5;\r\n\r\ncontract counter {}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/counter contract.sol": {
				"counter": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/counter contract.sol\":27:46  contract counter {} */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/counter contract.sol\":27:46  contract counter {} */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a84341fcbcc755ca8d37061f08465063ae8711c2ec768dfbc61d854c7cd7de1164736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220a84341fcbcc755ca8d37061f08465063ae8711c2ec768dfbc61d854c7cd7de1164736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 NUMBER COINBASE 0xFC 0xBC 0xC7 SSTORE 0xCA DUP14 CALLDATACOPY MOD 0x1F ADDMOD CHAINID POP PUSH4 0xAE8711C2 0xEC PUSH23 0x8DFBC61D854C7CD7DE1164736F6C634300070600330000 ",
							"sourceMap": "27:19:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220a84341fcbcc755ca8d37061f08465063ae8711c2ec768dfbc61d854c7cd7de1164736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 NUMBER COINBASE 0xFC 0xBC 0xC7 SSTORE 0xCA DUP14 CALLDATACOPY MOD 0x1F ADDMOD CHAINID POP PUSH4 0xAE8711C2 0xEC PUSH23 0x8DFBC61D854C7CD7DE1164736F6C634300070600330000 ",
							"sourceMap": "27:19:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 46,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 46,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 46,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 46,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 46,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 46,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27,
									"end": 46,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 46,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27,
									"end": 46,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 46,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 46,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27,
									"end": 46,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 46,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27,
									"end": 46,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 46,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 46,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 46,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 46,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 46,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 46,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 46,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a84341fcbcc755ca8d37061f08465063ae8711c2ec768dfbc61d854c7cd7de1164736f6c63430007060033",
									".code": [
										{
											"begin": 27,
											"end": 46,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 46,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 46,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 46,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 46,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 46,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/counter contract.sol\":\"counter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/counter contract.sol\":{\"keccak256\":\"0x2b8aa7eb90068ae491336633a22597253fb7d3dea90d1c208bf71cb6dcf8f977\",\"urls\":[\"bzz-raw://eb28afdd65ce7003bca13ec7d05e5dab6695956a08f9015507a7bb0c2480619c\",\"dweb:/ipfs/QmNnaHrf5nXCR9cXL9KorVnCxKwrMDmikn1dt82pYpZRzN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "contracts/counter contract.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/counter contract.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/counter contract.sol": {
				"ast": {
					"absolutePath": "contracts/counter contract.sol",
					"exportedSymbols": {
						"counter": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "counter",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "27:19:0"
						}
					],
					"src": "0:46:0"
				},
				"id": 0
			}
		}
	}
}