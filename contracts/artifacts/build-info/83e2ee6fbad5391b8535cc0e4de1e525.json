{
	"id": "83e2ee6fbad5391b8535cc0e4de1e525",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/lec four constructor.sol": {
				"content": "pragma solidity ^0.7.5;\r\n\r\ncontract testing {\r\n    string message;\r\n\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/lec four constructor.sol": {
				"testing": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/lec four constructor.sol\":27:77  contract testing {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lec four constructor.sol\":27:77  contract testing {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122074548990d5231c0a881155e79736dd1bafe81da3fac378ecc13a92e77b7ff14e64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122074548990d5231c0a881155e79736dd1bafe81da3fac378ecc13a92e77b7ff14e64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x548990D5231C0A881155E79736DD1BAFE81DA3FAC3 PUSH25 0xECC13A92E77B7FF14E64736F6C634300070600330000000000 ",
							"sourceMap": "27:50:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122074548990d5231c0a881155e79736dd1bafe81da3fac378ecc13a92e77b7ff14e64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x548990D5231C0A881155E79736DD1BAFE81DA3FAC3 PUSH25 0xECC13A92E77B7FF14E64736F6C634300070600330000000000 ",
							"sourceMap": "27:50:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 77,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 77,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 77,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 77,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 77,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 77,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27,
									"end": 77,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 77,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27,
									"end": 77,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 77,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 77,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27,
									"end": 77,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 77,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27,
									"end": 77,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 77,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 77,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 77,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 77,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 77,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 77,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 77,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122074548990d5231c0a881155e79736dd1bafe81da3fac378ecc13a92e77b7ff14e64736f6c63430007060033",
									".code": [
										{
											"begin": 27,
											"end": 77,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 77,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 77,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 77,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 77,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 77,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lec four constructor.sol\":\"testing\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lec four constructor.sol\":{\"keccak256\":\"0x7ab3ae9998941a29b2ee1d8ef3dd62ef9ed7cf73728f4ec93739111b5b16cb3b\",\"urls\":[\"bzz-raw://597263b597bd20c818dff3ca07c36a3c967e0440d8f8c00916366b2177d14fa8\",\"dweb:/ipfs/Qmb1fH3AceZxbQ4rb5sBMaKUpvpEqyQ3TRibMhjyceSERP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/lec four constructor.sol:testing",
								"label": "message",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "contracts/lec four constructor.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/lec four constructor.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/lec four constructor.sol": {
				"ast": {
					"absolutePath": "contracts/lec four constructor.sol",
					"exportedSymbols": {
						"testing": [
							4
						]
					},
					"id": 5,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 4,
							"linearizedBaseContracts": [
								4
							],
							"name": "testing",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "message",
									"nodeType": "VariableDeclaration",
									"scope": 4,
									"src": "51:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "51:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 5,
							"src": "27:50:0"
						}
					],
					"src": "0:77:0"
				},
				"id": 0
			}
		}
	}
}