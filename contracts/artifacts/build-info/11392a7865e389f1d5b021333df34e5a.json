{
	"id": "11392a7865e389f1d5b021333df34e5a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/counter contract.sol": {
				"content": "pragma solidity ^0.8.5;\r\n\r\ncontract counter {\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/counter contract.sol": {
				"counter": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/counter contract.sol\":27:54  contract counter {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/counter contract.sol\":27:54  contract counter {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202e12e7d7db6f58c9de307fb8ea16ce64ff20f76a4210ad342ac56a446a70996e64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212202e12e7d7db6f58c9de307fb8ea16ce64ff20f76a4210ad342ac56a446a70996e64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E SLT 0xE7 0xD7 0xDB PUSH16 0x58C9DE307FB8EA16CE64FF20F76A4210 0xAD CALLVALUE 0x2A 0xC5 PUSH11 0x446A70996E64736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "27:27:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212202e12e7d7db6f58c9de307fb8ea16ce64ff20f76a4210ad342ac56a446a70996e64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E SLT 0xE7 0xD7 0xDB PUSH16 0x58C9DE307FB8EA16CE64FF20F76A4210 0xAD CALLVALUE 0x2A 0xC5 PUSH11 0x446A70996E64736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "27:27:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 54,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 54,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 54,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 54,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27,
									"end": 54,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 54,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 54,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 54,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27,
									"end": 54,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 54,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27,
									"end": 54,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 54,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 54,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 54,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 54,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 54,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 54,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202e12e7d7db6f58c9de307fb8ea16ce64ff20f76a4210ad342ac56a446a70996e64736f6c63430008110033",
									".code": [
										{
											"begin": 27,
											"end": 54,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 54,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 54,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 54,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 54,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 54,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/counter contract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/counter contract.sol\":\"counter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/counter contract.sol\":{\"keccak256\":\"0xfd601b74513f60e61ff219fe5b4d0fb5c0625f6e40b3f6b973f74a1a7dd1356d\",\"urls\":[\"bzz-raw://202c58676b4db8fb7439b9be0db3d975039475ba8ec8222ad4de79135de7bc5c\",\"dweb:/ipfs/QmUJmdbXQ1EVdEo8fHafn96NNvWApUq6A5VqdVSJP9Jtf7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/counter contract.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/counter contract.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/counter contract.sol": {
				"ast": {
					"absolutePath": "contracts/counter contract.sol",
					"exportedSymbols": {
						"counter": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "counter",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "counter",
							"nameLocation": "36:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "27:27:0",
							"usedErrors": []
						}
					],
					"src": "0:54:0"
				},
				"id": 0
			}
		}
	}
}