{
	"id": "b8b730bf1303e5f2f4f16936b621419f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.5",
	"solcLongVersion": "0.8.5+commit.a4f2e591",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/task 1.sol": {
				"content": "pragma solidity ^0.8.5;\r\n\r\ncontract Mapping {\r\n/*\r\n    mapping(string => string) public testmapping;\r\n\r\n    function test(string _vehicle, string _color) public view returns(string memory)\r\n    {\r\n    return testmapping[_vehicle] = _color;\r\n    }\r\n*/\r\n\r\n    \r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/task 1.sol": {
				"Mapping": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/task 1.sol\":27:263  contract Mapping {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/task 1.sol\":27:263  contract Mapping {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b66d30de7a4d7225c957ce3c741f8b43fb5288ab2e7470ba2075e2ea43ca6f9064736f6c63430008050033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220b66d30de7a4d7225c957ce3c741f8b43fb5288ab2e7470ba2075e2ea43ca6f9064736f6c63430008050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 PUSH14 0x30DE7A4D7225C957CE3C741F8B43 0xFB MSTORE DUP9 0xAB 0x2E PUSH21 0x70BA2075E2EA43CA6F9064736F6C63430008050033 ",
							"sourceMap": "27:236:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220b66d30de7a4d7225c957ce3c741f8b43fb5288ab2e7470ba2075e2ea43ca6f9064736f6c63430008050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 PUSH14 0x30DE7A4D7225C957CE3C741F8B43 0xFB MSTORE DUP9 0xAB 0x2E PUSH21 0x70BA2075E2EA43CA6F9064736F6C63430008050033 ",
							"sourceMap": "27:236:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 263,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 263,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 263,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 263,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 263,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 263,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27,
									"end": 263,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 263,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27,
									"end": 263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 263,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 263,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27,
									"end": 263,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 263,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27,
									"end": 263,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 263,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 263,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 263,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 263,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 263,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b66d30de7a4d7225c957ce3c741f8b43fb5288ab2e7470ba2075e2ea43ca6f9064736f6c63430008050033",
									".code": [
										{
											"begin": 27,
											"end": 263,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 263,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 263,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/task 1.sol\":\"Mapping\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/task 1.sol\":{\"keccak256\":\"0x263d530bee848cb368ad8295ffec90968a6028a89414e2b32637f29b4586b26e\",\"urls\":[\"bzz-raw://058218395d45d5c5f964a8eea3d70c4ae8348b0c3fd733afabf9717ddd36b358\",\"dweb:/ipfs/QmemWJdYkxfWhvnUV7hx9uoMvMM97rNRwiEBnmb1i5WfLE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/task 1.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/task 1.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/task 1.sol": {
				"ast": {
					"absolutePath": "contracts/task 1.sol",
					"exportedSymbols": {
						"Mapping": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Mapping",
							"nameLocation": "36:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "27:236:0",
							"usedErrors": []
						}
					],
					"src": "0:263:0"
				},
				"id": 0
			}
		}
	}
}