{
	"id": "7150f9fb50213dbd1847dc2d6c4f4f92",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.5",
	"solcLongVersion": "0.8.5+commit.a4f2e591",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/task2.sol": {
				"content": "pragma solidity ^0.8.5;\r\n\r\ncontract TestToken {}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/task2.sol": {
				"TestToken": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/task2.sol\":27:48  contract TestToken {} */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/task2.sol\":27:48  contract TestToken {} */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122066e0096a2d0091718e0380a0a196eee1925dc27627e3376b6635c95a6412e44764736f6c63430008050033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122066e0096a2d0091718e0380a0a196eee1925dc27627e3376b6635c95a6412e44764736f6c63430008050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0xE0096A2D009171 DUP15 SUB DUP1 LOG0 LOG1 SWAP7 0xEE 0xE1 SWAP3 0x5D 0xC2 PUSH23 0x27E3376B6635C95A6412E44764736F6C63430008050033 ",
							"sourceMap": "27:21:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122066e0096a2d0091718e0380a0a196eee1925dc27627e3376b6635c95a6412e44764736f6c63430008050033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0xE0096A2D009171 DUP15 SUB DUP1 LOG0 LOG1 SWAP7 0xEE 0xE1 SWAP3 0x5D 0xC2 PUSH23 0x27E3376B6635C95A6412E44764736F6C63430008050033 ",
							"sourceMap": "27:21:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 48,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 48,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 48,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 48,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 48,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 48,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27,
									"end": 48,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 48,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27,
									"end": 48,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 48,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 48,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27,
									"end": 48,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 48,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27,
									"end": 48,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 48,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 48,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 48,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 48,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 48,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 48,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 48,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122066e0096a2d0091718e0380a0a196eee1925dc27627e3376b6635c95a6412e44764736f6c63430008050033",
									".code": [
										{
											"begin": 27,
											"end": 48,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 48,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 48,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 48,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 48,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 48,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.5+commit.a4f2e591\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/task2.sol\":\"TestToken\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/task2.sol\":{\"keccak256\":\"0x4d3b0ceea57f7d5bc175e025079d84457e4dd4503eeaad887da827abfd4c23b4\",\"urls\":[\"bzz-raw://3b5905668599a9231ab65982b71774d1f6c0ca535abae468a1f46950f67efc03\",\"dweb:/ipfs/QmNe46cxkQ42RmmMXz9vrpc9etxXHZUbFhnCyc1km9MZc4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/task2.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/task2.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/task2.sol": {
				"ast": {
					"absolutePath": "contracts/task2.sol",
					"exportedSymbols": {
						"TestToken": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "TestToken",
							"nameLocation": "36:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "27:21:0",
							"usedErrors": []
						}
					],
					"src": "0:48:0"
				},
				"id": 0
			}
		}
	}
}