{
	"id": "22c30578f5af571bbae3002162d38c7e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/lec four constructor.sol": {
				"content": "pragma solidity ^0.7.5;\r\n\r\ncontract testing {}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/lec four constructor.sol": {
				"testing": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/lec four constructor.sol\":27:46  contract testing {} */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lec four constructor.sol\":27:46  contract testing {} */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122016bae8e0c66548c795b88f580e4c315dfe05d4a69c1524256b543727ebbfbce464736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122016bae8e0c66548c795b88f580e4c315dfe05d4a69c1524256b543727ebbfbce464736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xBA 0xE8 0xE0 0xC6 PUSH6 0x48C795B88F58 0xE 0x4C BALANCE 0x5D INVALID SDIV 0xD4 0xA6 SWAP13 ISZERO 0x24 0x25 PUSH12 0x543727EBBFBCE464736F6C63 NUMBER STOP SMOD MOD STOP CALLER ",
							"sourceMap": "27:19:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122016bae8e0c66548c795b88f580e4c315dfe05d4a69c1524256b543727ebbfbce464736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND 0xBA 0xE8 0xE0 0xC6 PUSH6 0x48C795B88F58 0xE 0x4C BALANCE 0x5D INVALID SDIV 0xD4 0xA6 SWAP13 ISZERO 0x24 0x25 PUSH12 0x543727EBBFBCE464736F6C63 NUMBER STOP SMOD MOD STOP CALLER ",
							"sourceMap": "27:19:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 27,
									"end": 46,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 27,
									"end": 46,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 27,
									"end": 46,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 46,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 27,
									"end": 46,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 46,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 27,
									"end": 46,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 46,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 27,
									"end": 46,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 46,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 46,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 27,
									"end": 46,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 27,
									"end": 46,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 27,
									"end": 46,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 27,
									"end": 46,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 46,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 27,
									"end": 46,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 27,
									"end": 46,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 46,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 27,
									"end": 46,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 27,
									"end": 46,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122016bae8e0c66548c795b88f580e4c315dfe05d4a69c1524256b543727ebbfbce464736f6c63430007060033",
									".code": [
										{
											"begin": 27,
											"end": 46,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27,
											"end": 46,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27,
											"end": 46,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27,
											"end": 46,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27,
											"end": 46,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27,
											"end": 46,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lec four constructor.sol\":\"testing\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lec four constructor.sol\":{\"keccak256\":\"0xd97142a5b2e071c6d75783a14369598db9d0a7fdcf88c5820d2dd0cf51e62089\",\"urls\":[\"bzz-raw://285c37cc13b4c46c7666704e73c54a68312beb40e8a1e3fcee2fef50ee075178\",\"dweb:/ipfs/QmZoMVV438vWQe8xs4Hy99uQYfoVd9jS8Qzvp2izf8MxbJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "contracts/lec four constructor.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/lec four constructor.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/lec four constructor.sol": {
				"ast": {
					"absolutePath": "contracts/lec four constructor.sol",
					"exportedSymbols": {
						"testing": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "testing",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "27:19:0"
						}
					],
					"src": "0:46:0"
				},
				"id": 0
			}
		}
	}
}